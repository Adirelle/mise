#!/usr/bin/env bash
set -euo pipefail
SCRIPT_DIR="$(cd "$(dirname "${BASH_SOURCE[0]}")" &>/dev/null && pwd)"
ROOT="$(cd "$SCRIPT_DIR/.." && pwd)"

# shellcheck source-path=SCRIPTDIR
source "$SCRIPT_DIR/style.sh"

FILES="$(find "$SCRIPT_DIR" -name 'test_*' -type f -printf '%P\n' | sort)"
test_count=0
passed_tests=()
failed_tests=()

if [ -n "${GITHUB_STEP_SUMMARY:-}" ]; then
  {
    echo "| Test | Duration | Result |"
    echo "| ---- | -------- | ------ |"
  } >>"$GITHUB_STEP_SUMMARY"
fi

for f in $FILES; do
  # split tests into two tranches to reduce test time
  if [ -n "${TEST_TRANCHE_COUNT:-}" ]; then
    char_count=${#f}
    if [[ $((char_count % "$TEST_TRANCHE_COUNT")) -ne "$TEST_TRANCHE" ]]; then
      continue
    fi
  fi
  if "$ROOT/e2e/run_test" "$f"; then
    passed_tests=("${passed_tests[@]}" "$f")
  else
    failed_tests=("${failed_tests[@]}" "$f")
  fi
  test_count=$((test_count + 1))
done

echo "e2e: ran $test_count tests" >&2

if [[ -n "${passed_tests[*]}" ]]; then
  ok "e2e: ${#passed_tests[*]} tests passed: ${passed_tests[*]}"
fi
if [[ -n "${failed_tests[*]}" ]]; then
  err "e2e: ${#failed_tests[*]} tests failed: ${failed_tests[*]}"
  exit 1
fi
